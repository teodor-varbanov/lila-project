name: CI/CD
on:
  push:
    branches:
      - 'main'
  pull_request:
    types: [closed]
jobs:

  Docker-Scan-and-Push-Mongo:
    permissions:
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push Mongo
        uses: docker/build-push-action@v5
        with:
          #context: ./mongo/
          file: ./mongo/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/dodohub:mongo2
      -
        name: Trivy scan for Mongo
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/dodo1845/dodohub:mongo2'
          format: 'sarif'
          output: 'trivy-results.sarif'
      -
        name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      -
        name: Run MONGO
        run: docker run -d -p 27017:27017 dodo1845/dodohub:mongo1
        
  Docker-Scan-and-Push-Redis:
    permissions:
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    runs-on: ubuntu-latest
    steps:
      -
        name: Build and push Redis
        uses: docker/build-push-action@v5
        with:
          #context: ./redis/
          file: ./redis/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/dodohub:redis2
      -
        name: Trivy scan for Redis
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/dodo1845/dodohub:redis2'
          format: 'sarif'
          output: 'trivy-results.sarif'
      -
        name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          
  Docker-Scan-and-Push-Lila:
    permissions:
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    runs-on: ubuntu-latest
    steps:
      -
        name: Build and push lila
        uses: docker/build-push-action@v5
        with:
          #context: ./lila/
          file: ./lila/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/dodohub:lila2
      -
        name: Trivy scan for Lila
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/dodo1845/dodohub:lila2'
          format: 'sarif'
          output: 'trivy-results.sarif'
      -
        name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
  
  SnykSecurity:
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v2
      - name: Run Snyk to check Scala
        uses: snyk/actions/scala@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}  
        with:
          args: --all-projects --severity-threshold=critical
        # continue-on-error: true
        
  GitLeaks:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with: {fetch-depth: 0}

      - name: Check for GitLeaks
        uses: gacts/gitleaks@v1 
        if: always()
        
  SonarCloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  Pull-images: 
    runs-on: self-hosted
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Pull MONGO from Dockerhub
        run: docker pull dodo1845/dodohub:mongo2
      -
        name: Pull REDIS from Dockerhub
        run: docker pull dodo1845/dodohub:redis2
      -
        name: Pull LILA from Dockerhub
        run: docker pull dodo1845/dodohub:lila2
        
  Run-images: 
    runs-on: self-hosted
    steps:
      -
        name: STOP CONTAINERS IF ANY ARE RUNNING
        run: docker stop (docker ps -q)
      -
        name: REMOVE LEFTOVER CONTAINERS
        run: docker container prune -f
      -
        name: Run REDIS container
        run: docker run -d -p6379:6379 dodo1845/dodohub:redis2
      -
        name: Run MONGO container
        run: docker run -d -p27017:27017 dodo1845/dodohub:mongo2
      -
        name: Run LILA container
        run: docker run -d -p9663:9663 -p9664:9664 dodo1845/dodohub:lila2
